"use strict";
const senderLayers = [
    {
        layerNumber: { ar: '١', en: '1' },
        layerName: { ar: 'الطبقة الفيزيائية', en: 'Physical' },
        description: {
            ar: 'جهاز المرسل يقوم بإرسال إشارات البلوتوث لنقل البيانات إلى جهاز المستقبل.',
            en: 'Data managed by a physical layer',
        },
    },
    {
        layerNumber: { ar: '٢', en: '2' },
        layerName: { ar: 'وصلة البيانات', en: 'Data Link' },
        description: {
            ar: 'جهاز المرسل يقوم بتقسيم الملف إلى أجزاء صغيرة ليتم إرسالها عبر البلوتوث.',
            en: 'Data managed by a data link layer',
        },
    },
    {
        layerNumber: { ar: '٣', en: '3' },
        layerName: { ar: 'الشبكة', en: 'Network' },
        description: {
            ar: 'لا حاجة لتوجيه البيانات، لأن الاتصال مباشر بين جهازين، ولكن جهاز المرسل يتعرف على عنوان MAC لجهاز المستقبل.',
            en: 'Data managed by a network layer',
        },
    },
    {
        layerNumber: { ar: '٤', en: '4' },
        layerName: { ar: 'النقل', en: 'Transport' },
        description: {
            ar: 'جهاز المرسل يستخدم بروتوكول L2CAP لضمان أن البيانات تصل بشكل صحيح.',
            en: 'Data managed by a transport layer',
        },
    },
    {
        layerNumber: { ar: '٥', en: '5' },
        layerName: { ar: 'الجلسة', en: 'Session' },
        description: {
            ar: 'جهاز المرسل يبدأ جلسة نقل البيانات ويواصلها حتى يتم إرسال الملف بالكامل.',
            en: 'Data managed by a session layer',
        },
    },
    {
        layerNumber: { ar: '٦', en: '6' },
        layerName: { ar: 'العرض', en: 'Presentation' },
        description: {
            ar: 'جهاز المرسل يقوم بفك تشفير أو ضغط البيانات إذا لزم الأمر.',
            en: 'Data formatted for presentation',
        },
    },
    {
        layerNumber: { ar: '٧', en: '7' },
        layerName: { ar: 'التطبيق', en: 'Application' },
        description: {
            ar: 'تطبيق البلوتوث على جهاز المرسل يعرض تأكيدًا عند إرسال الملف بنجاح.',
            en: 'Data generated by an application',
        },
    },
];
const receiverLayers = [
    {
        layerNumber: { ar: '٧', en: '7' },
        layerName: { ar: 'التطبيق', en: 'Application' },
        description: {
            ar: 'تطبيق البلوتوث على جهاز المستقبل يعرض تأكيدًا عند استلام الملف بنجاح.',
            en: 'Data generated by an application',
        },
    },
    {
        layerNumber: { ar: '٦', en: '6' },
        layerName: { ar: 'العرض', en: 'Presentation' },
        description: {
            ar: 'جهاز المستقبل يفك تشفير أو يضغط البيانات إذا لزم الأمر.',
            en: 'Data formatted for presentation',
        },
    },
    {
        layerNumber: { ar: '٥', en: '5' },
        layerName: { ar: 'الجلسة', en: 'Session' },
        description: {
            ar: 'جهاز المستقبل يستمر في استلام البيانات حتى يتم استلام الملف بالكامل.',
            en: 'Data managed by a session layer',
        },
    },
    {
        layerNumber: { ar: '٤', en: '4' },
        layerName: { ar: 'النقل', en: 'Transport' },
        description: {
            ar: 'جهاز المستقبل يتأكد من تلقي جميع أجزاء الملف بشكل صحيح باستخدام بروتوكول L2CAP.',
            en: 'Data managed by a transport layer',
        },
    },
    {
        layerNumber: { ar: '٣', en: '3' },
        layerName: { ar: 'الشبكة', en: 'Network' },
        description: {
            ar: 'جهاز المستقبل يتعرف على عنوان MAC لجهاز المرسل ويستقبل البيانات بشكل مباشر.',
            en: 'Data managed by a network layer',
        },
    },
    {
        layerNumber: { ar: '٢', en: '2' },
        layerName: { ar: 'وصلة البيانات', en: 'Data Link' },
        description: {
            ar: 'جهاز المستقبل يستقبل أجزاء الملف المرسلة ويعيد تجميعها.',
            en: 'Data managed by a data link layer',
        },
    },
    {
        layerNumber: { ar: '١', en: '1' },
        layerName: { ar: 'الطبقة الفيزيائية', en: 'Physical' },
        description: {
            ar: 'جهاز المستقبل يتلقى إشارات البلوتوث من جهاز المرسل.',
            en: 'Data managed by a physical layer',
        },
    },
];
const headings = {
    en: "<strong>O</strong>perating <strong>S</strong>ystem <strong>I</strong>nterface",
    ar: "واجهة نظام التشغيل"
};
function updateHeader(language) {
    const OSIShortcutName = document.getElementById('osi-shortcut-name');
    if (OSIShortcutName) {
        OSIShortcutName.innerHTML = headings[language];
    }
}
function displayLayers(layers, containerID, language, svgIcon) {
    const container = document.getElementById(containerID);
    if (container) {
        container.innerHTML = '';
        const senderIcon = `
    <h2>${language === 'ar' ? 'المرسل' : 'Sender'}</h2>
      <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="senderIcon" viewBox="0 0 16 16">
      <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5v7A1.5 1.5 0 0 0 1.5 10H6v1H1a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-5v-1h4.5A1.5 1.5 0 0 0 16 8.5v-7A1.5 1.5 0 0 0 14.5 0zm0 1h13a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5v-7a.5.5 0 0 1 .5-.5M12 12.5a.5.5 0 1 1 1 0 .5.5 0 0 1-1 0m2 0a.5.5 0 1 1 1 0 .5.5 0 0 1-1 0M1.5 12h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1M1 14.25a.25.25 0 0 1 .25-.25h5.5a.25.25 0 1 1 0 .5h-5.5a.25.25 0 0 1-.25-.25"/>
      </svg>
    `;
        const receiverIcon = `
      <h2>${language === 'ar' ? 'المستقبل' : 'Receiver'}</h2>
      <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="receiverIcon" viewBox="0 0 16 16">
      <path d="M11 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM5 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>
      <path d="M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2"/>
      </svg>
    `;
        const icon = svgIcon === 'senderIcon' ? senderIcon : receiverIcon;
        const iconDiv = document.createElement('div');
        iconDiv.className = 'iconDiv';
        iconDiv.innerHTML = icon;
        container.appendChild(iconDiv);
        layers.forEach((layer) => {
            const layerDiv = document.createElement('div');
            layerDiv.className = 'layer';
            layerDiv.innerHTML =
                `
        <h2>${layer.layerNumber[language]}: ${layer.layerName[language]}</h2>
        <p>${layer.description[language]}</p>
        `;
            container.appendChild(layerDiv);
        });
    }
}
function handleLanguageChange(language) {
    displayLayers(senderLayers, 'sender-layers', language, 'senderIcon');
    displayLayers(receiverLayers, 'receiver-layers', language, 'receiverIcon');
    updateHeader(language);
    const arabicButton = document.getElementById('arabic');
    const englishButton = document.getElementById('english');
    const arabicButtonClass = 'arabic-button-background-toggled';
    const englishButtonClass = 'english-button-background-toggled';
    arabicButton.classList.remove(arabicButtonClass, englishButtonClass);
    englishButton.classList.remove(arabicButtonClass, englishButtonClass);
    if (language === 'ar') {
        arabicButton.classList.add(arabicButtonClass);
    }
    else if (language === 'en') {
        englishButton.classList.add(englishButtonClass);
    }
}
window.onload = () => {
    const arabicButton = document.getElementById('arabic');
    const englishButton = document.getElementById('english');
    arabicButton.onclick = () => handleLanguageChange('ar');
    englishButton.onclick = () => handleLanguageChange('en');
    handleLanguageChange('ar');
};
//# sourceMappingURL=index.js.map